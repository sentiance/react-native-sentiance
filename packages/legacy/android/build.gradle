import io.invertase.gradle.common.PackageJson

plugins {
  id "com.android.library"
  id "io.invertase.gradle.build" version "1.5"
}

def coreProj
if (findProject(':core')) {
  coreProj = project(':core')
} else if (findProject(':react-native-sentiance_core')) {
  // Starting from RN 0.61, the @ sign is stripped from project names
  coreProj = project(':react-native-sentiance_core')
} else if (findProject(':@react-native-sentiance_core')) {
  // On RN 0.60, the @ sign is not stripped from project names
  coreProj = project(':@react-native-sentiance_core')
} else {
  throw new GradleException('Could not find the react-native-sentiance/core package, have you installed it?')
}

def crashDetectionProj
if (findProject(':crash-detection')) {
  crashDetectionProj = project(':crash-detection')
} else if (findProject(':react-native-sentiance_crash-detection')) {
  // Starting from RN 0.61, the @ sign is stripped from project names
  crashDetectionProj = project(':react-native-sentiance_crash-detection')
} else if (findProject(':@react-native-sentiance_crash-detection')) {
  // On RN 0.60, the @ sign is not stripped from project names
  crashDetectionProj = project(':@react-native-sentiance_crash-detection')
} else {
  throw new GradleException('Could not find the react-native-sentiance/crash-detection package, have you installed it?')
}

def packageJson = PackageJson.getForProject(project)
def corePackageJson = PackageJson.getForProject(coreProj)
def crashDetectionPackageJson = PackageJson.getForProject(crashDetectionProj)

def defaultMinSdkVersion = corePackageJson['sdkVersions']['android']['minSdk']
def defaultTargetSdkVersion = corePackageJson['sdkVersions']['android']['targetSdk']
def defaultCompileSdkVersion = corePackageJson['sdkVersions']['android']['compileSdk']
def defaultBuildToolsVersion = corePackageJson['sdkVersions']['android']['buildTools']
def sentianceSdkVersion = corePackageJson['sdkVersions']['android']['sentiance']

// We can do this if we want to enforce strict version dependencies in-between Sentiance artifacts
def crashDetectionVersionDetected = crashDetectionPackageJson['version']
def crashDetectionVersionRequired = packageJson['peerDependencies'][crashDetectionPackageJson['name']]

if (crashDetectionVersionDetected != crashDetectionVersionRequired) {
  // Only log after build completed so log warning appears at the end
  gradle.buildFinished {
    project.logger.warn("ReactNativeSentianceLegacy WARNING: NPM package '${packageJson['name']}' depends on '${crashDetectionPackageJson['name']}' v${crashDetectionVersionRequired} but found v${crashDetectionVersionDetected} instead. This might cause build issues or runtime crashes.")
  }
}

project.ext {
  set('react-native', [
    versions: [
      android: [
        minSdk    : defaultMinSdkVersion,
        targetSdk : defaultTargetSdkVersion,
        compileSdk: defaultCompileSdkVersion,
        buildTools: defaultBuildToolsVersion,
      ],
    ],
  ])
}

dependencies {
  implementation crashDetectionProj
  implementation 'com.facebook.react:react-native:+'
}

ReactNative.module.applyAndroidVersions()
