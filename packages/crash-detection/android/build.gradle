plugins {
  id "com.android.library"
}

def coreProj
if (findProject(':core')) {
  coreProj = project(':core')
} else if (findProject(':react-native-sentiance-core')) {
  coreProj = project(':react-native-sentiance-core')
} else if (findProject(':react-native-sentiance_core')) {
  // Starting from RN 0.61, the @ sign is stripped from project names
  coreProj = project(':react-native-sentiance_core')
} else if (findProject(':@react-native-sentiance_core')) {
  // On RN 0.60, the @ sign is not stripped from project names
  coreProj = project(':@react-native-sentiance_core')
} else {
  throw new GradleException('Could not find the react-native-sentiance-core package, have you installed it?')
}

apply from: "$coreProj.projectDir/package-json-reader.gradle"
apply from: "$coreProj.projectDir/sentiance-version-finder.gradle"

def corePackageJson = PackageJson.of(coreProj)
applyAndroidVersionsFrom(corePackageJson)
def sentianceSdkVersion = getSentianceSdkVersion()

dependencies {
  api coreProj

  implementation(platform("com.sentiance:sdk-bom:${sentianceSdkVersion}"))
  api("com.sentiance:sdk-crash-detection") { transitive = true }
}

applyReactNativeDependency()
